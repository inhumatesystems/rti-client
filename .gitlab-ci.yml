stages:
  - build
  - test
  - build-2
  - package
  - publish
  - release

variables:
  BROKER_PROJECT_ID: 46515078
  BROKER_BRANCH: main

default:
  before_script:
    - VERSION=${CI_COMMIT_TAG}
    - "[ -z \"$VERSION\" ] && VERSION=0.0.${CI_PIPELINE_IID}"
    - export VERSION
    - export DEBIAN_FRONTEND=noninteractive


# BUILD

build js client:
  stage: build
  image: node:20-slim
  script:
    - apt-get update -qq
    - apt-get install -qq curl unzip
    - scripts/get_protobuf.sh
    - cd js
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" package.json src/constants.ts webpack.config.cjs
    - npm install
    - ./generate.sh
    - npm run build
    - npm pack
  artifacts:
    paths:
      - js/src/constants.ts
      - js/src/generated
      - js/package.json
      - js/lib
      - js/dist
      - js/inhumate*.tgz
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - protobuf
      - node_modules
      - js/node_modules

build js legacy client:
  stage: build
  image: node:20-slim
  script:
    - apt-get update -qq
    - apt-get install -qq curl unzip
    - scripts/get_protobuf.sh
    - cd js-legacy
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" package.json src/constants.ts
    - npm install
    - ./generate.sh
    - npm run build
    - npm pack
  artifacts:
    paths:
      - js-legacy/src/constants.ts
      - js-legacy/lib
      - js-legacy/src/generated
      - js-legacy/package.json
      - js-legacy/inhumate*.tgz
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - protobuf
      - node_modules
      - js-legacy/node_modules

build vue client:
  stage: build
  needs:
    - build js client
  image: node:20-slim
  script:
    - cd vue
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" package.json
    - npm install
    - npm run build
    - npm pack
  artifacts:
    paths:
      - vue/dist
      - vue/package.json
      - vue/inhumate*.tgz
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - protobuf
      - node_modules
      - vue/node_modules

build vue legacy client:
  stage: build
  needs:
    - build js legacy client
  image: node:20-slim
  script:
    - cd js-legacy
    - npm install
    - cd ../vue-legacy
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" package.json src/constants.ts
    - npm install
    - npm run build:lib
    - npm pack
  artifacts:
    paths:
      - vue-legacy/lib
      - vue-legacy/types
      - vue-legacy/package.json
      - vue-legacy/inhumate*.tgz
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - protobuf
      - node_modules
      - vue-legacy/node_modules

build python client:
  stage: build
  image: python:3.10-slim
  script:
    - apt-get -qq update && apt-get install -qq curl unzip
    - scripts/get_protobuf.sh
    - cd python
    - bash inhumate_rti/generate.sh
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" setup.py inhumate_rti/__init__.py
    - pip install build
    - python -m build
  artifacts:
    paths:
      - python/setup.py
      - python/inhumate_rti/__init__.py
      - python/inhumate_rti/generated
      - python/dist
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - protobuf

build dotnet client:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:7.0
  script:
    - apt-get update -qq && apt-get install -qq curl unzip
    - scripts/get_protobuf.sh
    - cd dotnet/src
    - ./generate.sh
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" *.csproj RTIConstants.cs
    - dotnet build -c Release
    - dotnet publish -c Release
  artifacts:
    paths:
      - dotnet/src/RTIConstants.cs
      - dotnet/src/generated
      - dotnet/src/bin/Release/net*/publish
      - dotnet/src/bin/Release/*.nupkg
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - protobuf

build c++ static client linux:
  stage: build
  # staying on ubuntu 18.04 image and system libs here because new libs in node 16 image (and modern ubuntu)
  # break the c++ client for some applications like X-Plane 11.55 and 12
  image: ubuntu:18.04
  script:
    - apt-get update -qq && apt-get install -qq git gcc g++ make cmake libasio-dev libssl-dev libwebsocketpp-dev
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" cpp/inhumaterti.hpp
    - cpp/scripts/linux_static_build.sh
  artifacts:
    paths:
      - cpp/inhumaterti.hpp
      - cpp/build
      - cpp/protobuf/src
      - cpp/protobuf/cmake-build
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - cpp/protobuf
      - cpp/asio
      - cpp/websocketpp
  
build c++ static client windows:
  stage: build
  tags:
    - win64
  before_script:
    - if ( "${CI_COMMIT_TAG}" ) { $VERSION = "${CI_COMMIT_TAG}" }
    - if ( ! "$VERSION" ) { $VERSION = "0.0.${CI_PIPELINE_IID}" }
  script:
    - ((get-content -path clients\cpp\inhumaterti.hpp -raw) -replace "0.0.1-dev-version","$VERSION") | set-content -path clients\cpp\inhumaterti.hpp
    - powershell -file clients\cpp\scripts\windows_static_build.ps1
  artifacts:
    paths:
      - cpp/inhumaterti.hpp
      - cpp/build
      - cpp/protobuf/cmake-build
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - cpp/protobuf
      - cpp/asio
      - cpp/websocketpp
    
build c++ ue5 client linux:
  stage: build-2
  tags:
    - linux
    - nm8
  only:
    - tags
    - /^(ue).*/
  script:
    - sed -i "s/0.0.1-dev-version/${VERSION}/g" cpp/inhumaterti.hpp
    - cpp/scripts/linux_ue5_build.sh
  artifacts:
    paths:
      - cpp/build-ue5/Include
      - cpp/build-ue5/Linux
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - cpp/protobuf
      - cpp/asio
      - cpp/websocketpp

build c++ ue5 client windows:
  stage: build-2
  tags:
    - win64
    - nm8
  only:
    - tags
    - /^(ue).*/
  before_script:
    - if ( "${CI_COMMIT_TAG}" ) { $VERSION = "${CI_COMMIT_TAG}" }
    - if ( ! "$VERSION" ) { $VERSION = "0.0.${CI_PIPELINE_IID}" }
  script:
    - ((get-content -path clients\cpp\inhumaterti.hpp -raw) -replace "0.0.1-dev-version","$VERSION") | set-content -path clients\cpp\inhumaterti.hpp
    - powershell -file clients\cpp\scripts\windows_ue5_build.ps1
  artifacts:
    paths:
      - cpp/build-ue5/Include
      - cpp/build-ue5/Win64
    expire_in: 1 week
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - cpp/protobuf
      - cpp/asio
      - cpp/websocketpp
        

# TEST

test js client:
  stage: test
  image: node:20-slim
  needs:
    - build js client
  script:
    - apt-get update -qq && apt-get install -qq curl unzip
    - "curl --location --output artifacts.zip --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \"https://gitlab.com/api/v4/projects/${BROKER_PROJECT_ID}/jobs/artifacts/${BROKER_BRANCH}/download?job=build%20broker\" && unzip artifacts.zip && rm -f artifacts.zip"
    - node broker/dist/broker.js &
    - sleep 10
    - cd js
    - npm install
    - npm run test-ci
  artifacts:
    reports:
      junit:
        - js/junit.xml
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - js/node_modules

test js legacy client:
  stage: test
  image: node:20-slim
  needs:
    - build js legacy client
  script:
    - apt-get update -qq && apt-get install -qq curl unzip
    - "curl --location --output artifacts.zip --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \"https://gitlab.com/api/v4/projects/${BROKER_PROJECT_ID}/jobs/artifacts/${BROKER_BRANCH}/download?job=build%20broker\" && unzip artifacts.zip && rm -f artifacts.zip"
    - node broker/dist/broker.js &
    - sleep 10
    - cd js-legacy
    - npm install
    - npm run test-ci
  artifacts:
    reports:
      junit:
        - js-legacy/junit.xml
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - js-legacy/node_modules
 
test python client:
  stage: test
  image: python:3.10-slim
  needs:
    - build python client
  script:
    - apt-get update -qq && apt-get install -qq curl unzip python3-pip
    # Install node and broker
    - curl -sL https://deb.nodesource.com/setup_20.x | bash -
    - apt-get install -y nodejs
    - "curl --location --output artifacts.zip --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \"https://gitlab.com/api/v4/projects/${BROKER_PROJECT_ID}/jobs/artifacts/${BROKER_BRANCH}/download?job=build%20broker\" && unzip artifacts.zip && rm -f artifacts.zip"
    # Start broker
    - node broker/dist/broker.js &
    - sleep 10
    # Run tests
    - pip install -r python/inhumate_rti/requirements.txt
    - pip install -r python/test/requirements.txt
    - cd python/test
    - python -mpytest -v --junitxml=./test-result.xml
  artifacts:
    reports:
      junit:
        - python/test/test-result.xml

test dotnet client:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:7.0
  needs:
    - build dotnet client
  script:
    - apt-get update -qq && apt-get install -qq curl unzip
    # Install node and broker
    - curl -sL https://deb.nodesource.com/setup_20.x | bash -
    - apt-get install -y nodejs
    - "curl --location --output artifacts.zip --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \"https://gitlab.com/api/v4/projects/${BROKER_PROJECT_ID}/jobs/artifacts/${BROKER_BRANCH}/download?job=build%20broker\" && unzip artifacts.zip && rm -f artifacts.zip"
    # Start broker
    - node broker/dist/broker.js &
    - sleep 10
    # Run tests
    - cd dotnet/test
    - dotnet test -v n --test-adapter-path:. --logger:"junit;LogFilePath=./test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    reports:
      junit:
        - dotnet/test/test-result.xml

test c++ client:
  stage: test
  image: ubuntu:18.04
  needs:
    - build c++ static client linux
  script:
    - apt-get -qq update && apt-get install -qq curl unzip libssl1.1
    # Install node and broker
    - curl -sL https://deb.nodesource.com/setup_16.x | bash -
    - apt-get install -y nodejs
    - "curl --location --output artifacts.zip --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \"https://gitlab.com/api/v4/projects/${BROKER_PROJECT_ID}/jobs/artifacts/${BROKER_BRANCH}/download?job=build%20broker\" && unzip artifacts.zip && rm -f artifacts.zip"
    # Start broker
    - node broker/dist/broker.js &
    - sleep 10
    # Run tests
    - cd cpp/build
    - ./inhumaterti_test --reporter junit >test-result.xml || ./inhumaterti_test --reporter junit >test-result.xml
  artifacts:
    reports:
      junit:
        - cpp/build/test-result.xml


# PACKAGE

package c++ static client:
  stage: package
  image: node:16-slim
  needs:
    - build c++ static client linux
    - build c++ static client windows
  script:
    - apt-get update -qq
    - apt-get install -qq zip
    - cpp/scripts/package_static.sh
  artifacts:
    paths:
      - cpp/build/inhumate*.zip
    expire_in: 1 week

package c++ ue5 client:
  stage: package
  image: node:16-slim
  dependencies:
    - build c++ ue5 client linux
    - build c++ ue5 client windows
    # - build c++ ue4 client macos
  script:
    - apt-get update -qq
    - apt-get install -qq zip
    - cpp/scripts/package_ue5.sh
  artifacts:
    paths:
      - cpp/build-ue5/inhumate*.zip
  only:
    - tags
    - /^(ue).*/

